# This file is not part of the built release - but you can use it locally to override default configuration
# via environment variables.
#
# Note: The tests do not use this file and set-up the environement variables as they require them.
#
# For more details see the config.rs source code.

# RUST_LOG is the standard name for logging in rust. The default for a release build should be info.
# What we have below is a good default for developers. If you change the first value to trace, then
# all the subsequent settings reduce the spam you'll see.
RUST_LOG=debug,actix=info,lapin=info,pinky_swear=info,mio=info,trust_dns_resolver=info

#
# Connection details for MongoDB anf RabbitMQ.
#
# There are two ways to configure the connections: -
#
# 1. Take a URI literal as-is via the MONGO_URI/RABBIT_URI environment variable. In each case the
#    MONGO_CREDENTIALS and RABBIT_CREDENTIALS vars should be left blank (default).
#
# 2. Take the URIs as templates by setting the username in the URI to $USERNAME and the password in
#    the URI to $PASSWORD. Then set MONGO_CREDENTIALS and/or RABBIT_CREDENTIALS to the path to a
#    secrets file. A secrets file contains a username on the first line and a password on the second.
#
# Note: If you're using a secrets file and providing the MONGO_URI via this .env file, then ensure you
# escape the '$' symbol used in $USERNAME and $PASSWORD with a back-slash to avoid the dotenv() code
# interpretting them as other environement variables and attempting to substitute them. i.e. the URI
# must look something like this: -
#
#    mongodb://\$USERNAME:\$PASSWORD@localhost:27017/...
#
MONGO_CREDENTIALS=utils/test_credentials
MONGO_URI=mongodb://\$USERNAME:\$PASSWORD@localhost:27017/?connectTimeoutMS=5000&socketTimeoutMS=5000&serverSelectionTimeoutMS=5000

# RabbitMQ uses similar approach to MongoDB above regarding the secrets file.
RABBIT_CREDENTIALS=utils/test_credentials
RABBIT_URI=amqp://\$USERNAME:\$PASSWORD@localhost:5672

# TODO: Support a Sample rate.
# If this is on during tests, you'll often get an obscure panic about tokio timers - caused by trying
# to initialise the tracing subsystem from each test. For this reason distributed tracing is disabled
# during for tests.
DISTRIBUTED_TRACING=true
JAEGER_ENDPOINT=localhost:6831

# By default the tests will start docker containers to run MongoDB and RabbitMQ and attempt to keep
# them running during all the tests. After the last test the container should be shut down.
#
# This is the desired behaviour for a build pipeline. For developers though this can add 30+ seconds
# to the test cycle time. This setting will cause the tests to attempt to connect to pre-started
# instances of any required docker containsers.
#
# Just remember, using this option will leave test data in the system.
TESTS_USE_EXISTING_CONTAINERS=true

# This is the maximum number of messages that can be queued in the internal, inter-thread channel
# used to send RabbitMQ messages. When this queue is full, HTTP request handlers that need to
# send a RabbitMQ message will block until the RabbitMQ publisher thread has processed it's current
# message.
#
# Essentially, this avoid run-away memory consumption (i.e. too many unsent messages). See the
# rabbit.rs source code for more details.
NOTIFICATION_QUEUE_SIZE=1000

# This shold be true for production systems. When false, any BAD_REQUEST responses to the client will
# contain useful error details (also logged in the console). Very useful to know why you messed up a
# request to the service.
#
# Because these details may divulge information that can then be used to exploit security
# vulnerabilities, these validation responses can be diabled.
REDACT_ERROR_MESSAGES=false

# Supress colours used by tracer.
USE_COLOUR=true